## 技能系统
参考网游《洛奇》设置技能树，分为近战技能、远程技能、魔法技能。
根据职业，战士可以学习近战初始技能，游侠可以学习远程初始技能，法师可以学习魔法初始技能。
除了初始技能外，后续技能的学习条件是前序技能达到一定等级。
技能等级按16进制，习得的新技能等级为F，然后升一级到E，最高级是等级1
学习技能需要使用技能点，角色每提升等级1级可以获得1点技能点，技能升级时消耗技能点的量随技能等级提升

### 技能使用
玩家仅能在战斗中激活一种技能。不同技能有各自的激活时机和CD。

### 技能设计
近战技能：如重击，风车斩，防御，反击
远程节能：如双重箭，毒箭，火箭
魔法技能：如冰箭，火球，雷击

### 技能面板
顶部显示激活技能栏，显示该技能详细内容。
然后是技能树面板，顶部显示剩余技能点，和升级按钮。
下面分为近战技能、远程技能、魔法技能三个tab。
打开任意一个tab，该系技能树状显示，此时仅显示技能图标、名称和等级。
鼠标点击时展开悬停窗口显示技能介绍细节。悬停窗口上有关闭按钮和激活按钮。
点击升级按钮时，高亮显示可以升级的技能图标，并显示升级需消耗的技能点数，此时点击跳出窗口显示升级该技能的变化，并有升级和取消两个按钮。



扩展设计

1. 系统概述
技能系统是《永恒之塔：挂机征途》游戏中的核心玩法之一，参考网游《洛奇》的技能树设计，将技能分为近战技能、远程技能和魔法技能三大类。玩家可以根据自己的职业特点学习和升级不同的技能，提升战斗能力。

2. 技能分类与职业关联
2.1 技能类型
近战技能：适合战士职业，注重高伤害和生存能力
远程技能：适合游侠职业，注重精准打击和战术灵活性
魔法技能：适合法师职业，注重范围伤害和控制效果
2.2 职业初始技能
战士：重击（被动）- 有10%几率造成150%伤害
游侠：精准射击（被动）- 增加15%暴击率
法师：火球术（自动）- 每3回合对敌人造成120%魔法伤害
3. 技能等级系统
3.1 等级表示
技能等级采用16进制表示，从低到高依次为：

F（初始等级）
E
D
C
B
A
9
8
7
6
5
4
3
2
1（最高等级）
3.2 技能点获取
角色每提升1级获得1点技能点
完成特定任务可获得额外技能点（预留扩展）
特殊活动奖励（预留扩展）
3.3 技能升级消耗
技能升级消耗的技能点随等级提升而增加：

F→E：1点
E→D：1点
D→C：2点
C→B：2点
B→A：3点
A→9：3点
9→8：4点
8→7：4点
7→6：5点
6→5：5点
5→4：6点
4→3：6点
3→2：7点
2→1：8点
4. 技能树结构
4.1 近战技能树
plaintext

重击(初始) → 旋风斩 → 震地 → 战吼    ↓           ↓        ↓防御姿态 → 反击 → 盾牌冲锋 → 无敌    ↓生命强化 → 嗜血 → 狂暴
4.2 远程技能树
plaintext

精准射击(初始) → 双重箭 → 三连射 → 箭雨       ↓            ↓         ↓   毒箭 → 麻痹箭 → 穿透箭 → 爆炸箭       ↓   敏捷强化 → 闪避 → 疾跑
4.3 魔法技能树
plaintext

火球术(初始) → 火墙 → 陨石 → 天火     ↓          ↓       ↓冰箭 → 冰冻术 → 暴风雪 → 绝对零度     ↓魔力强化 → 法力回复 → 魔法护盾
5. 技能解锁条件
5.1 基础解锁规则
初始技能：角色创建时自动获得对应职业的初始技能
一级技能：需要前置技能达到D级或以上
二级技能：需要前置技能达到B级或以上
三级技能：需要前置技能达到9级或以上

6. 技能效果设计
6.1 近战技能详细设计
技能名称	类型	效果描述	冷却时间	等级提升效果
重击	被动	10%几率造成150%伤害	-	每级提升5%几率和10%伤害
旋风斩	主动	对敌人造成120%伤害	3回合	每级提升10%伤害
震地	主动	对敌人造成100%伤害并眩晕1回合	5回合	每级提升10%伤害和0.2回合眩晕
战吼	主动	提升20%攻击力，持续3回合	6回合	每级提升5%攻击力和0.5回合持续时间
防御姿态	主动	减少30%受到的伤害，持续2回合	4回合	每级提升5%减伤和0.5回合持续时间
反击	被动	受到攻击后有20%几率反击，造成80%伤害	-	每级提升5%几率和10%伤害
盾牌冲锋	主动	对敌人造成150%伤害并减少10%防御	4回合	每级提升10%伤害和2%防御减少
无敌	主动	免疫所有伤害1回合	10回合	每级提升0.2回合持续时间
生命强化	被动	增加15%最大生命值	-	每级提升5%最大生命值
嗜血	被动	攻击时有15%几率恢复5%最大生命值	-	每级提升5%几率和1%生命恢复
狂暴	主动	提升50%攻击力但减少20%防御，持续3回合	8回合	每级提升10%攻击力和0.5回合持续时间
6.2 远程技能详细设计
技能名称	类型	效果描述	冷却时间	等级提升效果
精准射击	被动	增加15%暴击率	-	每级提升3%暴击率
双重箭	主动	连续射出两箭，每箭造成70%伤害	3回合	每级提升5%伤害
三连射	主动	连续射出三箭，每箭造成60%伤害	4回合	每级提升5%伤害
箭雨	主动	造成200%伤害，分5回合平均释放	8回合	每级提升20%总伤害
毒箭	主动	造成80%伤害并附加每回合10%伤害的中毒效果，持续3回合	4回合	每级提升5%直接伤害和2%中毒伤害
麻痹箭	主动	造成70%伤害并有30%几率使目标1回合无法行动	5回合	每级提升5%伤害和5%麻痹几率
穿透箭	被动	攻击无视目标15%防御力	-	每级提升3%防御穿透
爆炸箭	主动	造成150%伤害并有20%几率造成额外50%伤害	6回合	每级提升10%伤害和5%额外伤害几率
敏捷强化	被动	增加15%敏捷	-	每级提升5%敏捷
闪避	被动	有10%几率闪避敌人攻击	-	每级提升2%闪避几率
疾跑	主动	提升30%攻击速度，持续3回合	6回合	每级提升5%攻击速度和0.5回合持续时间
6.3 魔法技能详细设计
技能名称	类型	效果描述	冷却时间	等级提升效果
火球术	主动	对敌人造成120%魔法伤害	3回合	每级提升10%伤害
火墙	主动	每回合造成40%魔法伤害，持续3回合	5回合	每级提升5%伤害和0.5回合持续时间
陨石	主动	对敌人造成200%魔法伤害	7回合	每级提升15%伤害
天火	主动	对敌人造成300%魔法伤害	10回合	每级提升20%伤害
冰箭	主动	对敌人造成100%魔法伤害并减少10%攻击速度	3回合	每级提升10%伤害和2%减速效果
冰冻术	主动	对敌人造成80%魔法伤害并有30%几率冰冻1回合	5回合	每级提升5%伤害和5%冰冻几率
暴风雪	主动	每回合造成50%魔法伤害并减少15%攻击速度，持续3回合	6回合	每级提升5%伤害和0.5回合持续时间
绝对零度	主动	对敌人造成150%魔法伤害并冰冻2回合	9回合	每级提升10%伤害和0.2回合冰冻时间
魔力强化	被动	增加15%魔力	-	每级提升5%魔力
法力回复	被动	每回合恢复5%最大法力值	-	每级提升1%法力回复
魔法护盾	主动	创造一个可吸收等同于魔力50%的伤害护盾，持续3回合	7回合	每级提升10%护盾强度和0.5回合持续时间
7. 技能使用机制
7.1 技能激活
玩家在战斗中只能激活一种技能
被动技能：始终生效
自动技能：自动在满足条件时释放，有冷却时间限制
7.2 技能冷却
冷却时间以战斗回合为单位
冷却中的技能无法再次使用

7.3 技能触发条件
回合开始型：在战斗回合开始时触发（如增益buff类技能）
攻击触发型：在角色攻击时触发（如重击、穿透箭等）
受击触发型：在角色受到攻击时触发（如反击、魔法护盾等）
特殊条件型：满足特定条件时触发（如生命值低于30%时触发的紧急治疗）
8. 技能与其他系统的交互
8.1 与魔宠系统的交互
某些魔宠可以提供技能冷却时间减少效果
特定魔宠可以增强特定类型技能的效果
魔宠的主动技能可以与角色技能形成连击效果
8.2 与装备系统的交互
特定装备可以提供技能等级加成
某些装备可以解锁特殊技能或技能变种
装备词条可以影响技能效果（如增加特定技能伤害）
9. 技能面板UI设计
9.1 基本布局
顶部：激活技能栏，显示当前激活技能的详细信息
中部：技能点显示区域和技能树切换标签（近战/远程/魔法）
底部：技能树显示区域，以树状结构展示技能关系和等级
9.2 交互设计
技能图标：显示技能名称和当前等级
鼠标悬停：显示技能详细信息的悬浮窗口
悬浮窗口：包含技能描述、效果、冷却时间、升级所需技能点等信息
升级按钮：点击后高亮可升级技能，显示升级消耗
激活按钮：点击后将该技能设为当前激活技能
9.3 视觉反馈
可学习技能：正常显示但略微暗淡
已学习技能：正常亮度显示，显示当前等级
可升级技能：边框闪烁或特殊高亮
无法学习技能：灰色显示，鼠标悬停时显示解锁条件
当前激活技能：特殊边框或光效
10. 数据结构设计
10.1 技能基础数据
javascript

const skillData = {    // 近战技能    heavyStrike: {        name: "重击",        type: "passive",        category: "melee",        description: "有{chance}%几率造成        {damage}%伤害",        baseChance: 10,        baseDamage: 150,        chancePerLevel: 5,        damagePerLevel: 10,        cooldown: 0,        requiredSkill: null,        requiredLevel: "F"    },    // 更多技能...};
10.2 玩家技能数据
javascript

const playerSkills = {    learned: {        heavyStrike: "F", // 技能ID: 等级        // 更多已学习技能...    },    activeSkill: "heavyStrike", // 当前    激活的技能ID    skillPoints: 5, // 剩余技能点    cooldowns: {        // 技能ID: 剩余冷却回合数    }};
10.3 技能等级转换
javascript

const skillLevels = [    "F", "E", "D", "C", "B", "A",     "9", "8", "7", "6", "5", "4", "3",     "2", "1"];function getSkillLevelIndex(level) {    return skillLevels.indexOf(level);}function getNextSkillLevel(currentLevel) {    const currentIndex =     getSkillLevelIndex(currentLevel);    if (currentIndex < skillLevels.    length - 1) {        return skillLevels[currentIndex         + 1];    }    return currentLevel; // 已是最高等级}
11. 实现路线图
11.1 第一阶段：基础框架
设计并实现技能数据结构
实现技能学习和升级逻辑
开发基础技能效果计算系统
设计技能面板UI原型
11.2 第二阶段：技能效果实现
实现所有近战技能效果
实现所有远程技能效果
实现所有魔法技能效果
开发技能冷却和触发系统
11.3 第三阶段：UI开发与集成
完成技能面板UI开发
实现技能树可视化
开发技能悬浮窗口和详细信息显示
实现技能激活和切换功能
11.4 第四阶段：系统联动与平衡
实现技能与魔宠系统的联动
实现技能与装备系统的联动
进行技能数值平衡调整
优化用户体验和视觉反馈
12. 扩展性考虑
12.1 未来扩展方向
职业专精：在基础技能树之上增加专精分支
技能组合：允许特定技能组合产生特殊效果
技能变种：同一技能根据装备或条件有不同效果变种
技能重置：提供技能点重置功能（可能需要消耗游戏资源）
12.2 技术预留
技能数据结构预留扩展字段
技能效果计算系统设计为可插拔式
UI组件设计为可复用和可扩展
预留技能特效系统接口
